/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package practico_5_grupo14;

import clases.Contacto;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Candela Naranjo
 */
public class BuscarPorApellido extends javax.swing.JInternalFrame {

    /**
     * Creates new form BuscarPorApellido
     */
    private DefaultTableModel tabla;
    private DefaultListModel<String> lista;
    private Set<String> todoslosApellidos;

    public BuscarPorApellido() {
        initComponents();
        initTabla();
        cargarTodosLosApellidos();
        filtrarListaApellidos();
    }

    private void initTabla() {
        tabla = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tabla.addColumn("DNI");
        tabla.addColumn("Nombre");
        tabla.addColumn("Apellido");
        tabla.addColumn("Dirección");
        tabla.addColumn("Teléfono");

        tablaBuscarApellido.setModel(tabla);

        lista = new DefaultListModel<>();
        listaApellidos.setModel(lista);
        
        //  filtro
        textApelidos.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                filtrarListaApellidos();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                filtrarListaApellidos();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                filtrarListaApellidos();
            }
        });

        // seleccion en lista
        listaApellidos.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                String apellidoSeleccionado = listaApellidos.getSelectedValue();
                if (apellidoSeleccionado != null) {
                    mostrarContactosPorApellido(apellidoSeleccionado);
                }
            }
        });
    }

    
    //cargar todos los apellidos unicos
    
    private void cargarTodosLosApellidos() {
        todoslosApellidos = new TreeSet<>();

        if (Telefonica.d1.getCliente().isEmpty()) {
            return;
        }

        for (Contacto contacto : Telefonica.d1.getCliente().values()) {
            todoslosApellidos.add(contacto.getApellido());
        }
    }

    
     //filtrar lista de apellidos segun texto ingresado
    private void filtrarListaApellidos() {
        String filtro = textApelidos.getText().trim().toLowerCase();
        lista.clear();

        if (todoslosApellidos.isEmpty()) {
            lista.addElement("No hay contactos");
            return;
        }

        if (filtro.isEmpty()) {
            // mostrar todos los apellidos si no hay filtro
            for (String apellido : todoslosApellidos) {
                lista.addElement(apellido);
            }
        } else {
            // filtrar apellidos que coincidan
            for (String apellido : todoslosApellidos) {
                if (apellido.toLowerCase().contains(filtro)) {
                    lista.addElement(apellido);
                }
            }

            if (lista.isEmpty()) {
                lista.addElement("No se encontraron apellidos");
            }
        }
    }
  
    //mostrar contactos del apellido seleccionado   
    private void mostrarContactosPorApellido(String apellido) {
        tabla.setRowCount(0);

        int contador = 0;

        for (Map.Entry<Long, Contacto> entry : Telefonica.d1.getCliente().entrySet()) {
            Contacto contacto = entry.getValue();
            if (contacto.getApellido().equals(apellido)) {
                tabla.addRow(new Object[]{
                    contacto.getDni(),
                    contacto.getNombre(),
                    contacto.getApellido(),
                    contacto.getCiudad(),
                    entry.getKey()
                });
                contador++;
            }
        }

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textApelidos = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaBuscarApellido = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaApellidos = new javax.swing.JList<>();
        btnSalirBuscarPorApellido = new javax.swing.JButton();

        setTitle("Buscar por Apellido");

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel1.setText("Buscar Telefono por Apellido");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Apellido:");

        jScrollPane1.setViewportView(textApelidos);

        tablaBuscarApellido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaBuscarApellido);

        jScrollPane4.setViewportView(listaApellidos);

        btnSalirBuscarPorApellido.setText("Salir");
        btnSalirBuscarPorApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirBuscarPorApellidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSalirBuscarPorApellido)
                .addGap(70, 70, 70))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSalirBuscarPorApellido)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirBuscarPorApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirBuscarPorApellidoActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirBuscarPorApellidoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalirBuscarPorApellido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> listaApellidos;
    private javax.swing.JTable tablaBuscarApellido;
    private javax.swing.JTextPane textApelidos;
    // End of variables declaration//GEN-END:variables
}
